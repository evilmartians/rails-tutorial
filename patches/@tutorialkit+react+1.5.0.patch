diff --git a/node_modules/@tutorialkit/react/dist/core/CodeMirrorEditor/languages.js b/node_modules/@tutorialkit/react/dist/core/CodeMirrorEditor/languages.js
index ed5edcb..24e9977 100644
--- a/node_modules/@tutorialkit/react/dist/core/CodeMirrorEditor/languages.js
+++ b/node_modules/@tutorialkit/react/dist/core/CodeMirrorEditor/languages.js
@@ -1,4 +1,4 @@
-import { LanguageDescription } from '@codemirror/language';
+import { LanguageDescription, LanguageSupport, StreamLanguage } from '@codemirror/language';
 export const supportedLanguages = [
     LanguageDescription.of({
         name: 'TS',
@@ -91,6 +91,16 @@ export const supportedLanguages = [
             return import('@replit/codemirror-lang-svelte').then((module) => module.svelte());
         },
     }),
+    LanguageDescription.of({
+        name: 'Ruby',
+        extensions: ['rb', 'rake', 'erb'],
+        filename: /(Gemfile|Rakefile|config\.ru|bin\/(rails|rubocop))/,
+        async load() {
+            return import('@codemirror/legacy-modes/mode/ruby').then((module) => {
+                return new LanguageSupport(StreamLanguage.define(module.ruby));
+            });
+        },
+    }),
 ];
 export async function getLanguage(fileName) {
     const languageDescription = LanguageDescription.matchFilename(supportedLanguages, fileName);
diff --git a/node_modules/@tutorialkit/react/dist/core/FileTree.js b/node_modules/@tutorialkit/react/dist/core/FileTree.js
index 900cbd7..9c4d048 100644
--- a/node_modules/@tutorialkit/react/dist/core/FileTree.js
+++ b/node_modules/@tutorialkit/react/dist/core/FileTree.js
@@ -9,9 +9,10 @@ export function FileTree({ files, onFileSelect, onFileChange, allowEditPatterns,
     const fileList = useMemo(() => buildFileList(files, hideRoot, scope, computedHiddenFiles), [files, hideRoot, scope, computedHiddenFiles]);
     const [collapsedFolders, setCollapsedFolders] = useState(() => new Set());
     // reset collapsed folders when the list of files changes
-    useEffect(() => {
-        setCollapsedFolders(new Set());
-    }, [files]);
+    // But why????
+    // useEffect(() => {
+    //     setCollapsedFolders(new Set());
+    // }, [files]);
     const filteredFileList = useMemo(() => {
         const list = [];
         let lastDepth = Number.MAX_SAFE_INTEGER;
diff --git a/node_modules/@tutorialkit/react/dist/Panels/EditorPanel.js b/node_modules/@tutorialkit/react/dist/Panels/EditorPanel.js
index 109e4eb..e3ce527 100644
--- a/node_modules/@tutorialkit/react/dist/Panels/EditorPanel.js
+++ b/node_modules/@tutorialkit/react/dist/Panels/EditorPanel.js
@@ -61,6 +61,15 @@ function getFileIcon(fileName) {
         case 'json': {
             return 'i-languages-json?mask';
         }
+        case 'rb': {
+            return 'i-languages-ruby?mask';
+        }
+        case 'ru': {
+            return 'i-languages-ruby?mask';
+        }
+        case 'erb': {
+            return 'i-languages-erb?mask';
+        }
         case 'gif':
         case 'jpg':
         case 'jpeg':
diff --git a/node_modules/@tutorialkit/react/dist/core/FileTree.js b/node_modules/@tutorialkit/react/dist/core/FileTree.js
index 900cbd7..678396c 100644
--- a/node_modules/@tutorialkit/react/dist/core/FileTree.js
+++ b/node_modules/@tutorialkit/react/dist/core/FileTree.js
@@ -188,4 +188,7 @@ const extensionsToIcons = new Map([
     ['jpeg', 'i-ph-file-image-duotone'],
     ['png', 'i-ph-file-image-duotone'],
     ['svg', 'i-ph-file-svg-duotone'],
+    ['rb', 'i-phosphor-file-rb'],
+    ['ru', 'i-phosphor-file-rb'],
+    ['erb', 'i-phosphor-file-erb'],
 ]);
